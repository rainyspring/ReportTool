<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>xu.jiang.report</groupId>
	<artifactId>violet</artifactId>
	<version>1.0.0</version>
	<!-- <version>2.2.1-SNAPSHOT</version> -->
	<packaging>jar</packaging>
	<name>jx</name>
	<description>jx</description>
 
	<properties>
		<!-- 指定源码 , 编译器的编码为 UTF-8 编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>

		<!-- lib version -->
		<spring.version>4.3.22.RELEASE</spring.version>
		<hibernate.version>4.3.8.Final</hibernate.version>
		<mybais.version>3.4.6</mybais.version>
		<poi.version>3.17</poi.version>
		<mybatis-spring.version>1.3.2</mybatis-spring.version>
		<mysql-connector.version>5.1.46</mysql-connector.version>
		<ojdbc7.version>12.1.0.2.0</ojdbc7.version>
		<druid.version>1.0.16</druid.version>
		<aopalliance.version>1.0</aopalliance.version>
		<aspectj.weaver.version>1.6.4.RELEASE</aspectj.weaver.version>
		<commons.logging.version>1.1.1</commons.logging.version>
		<commons.lang>3.8.1</commons.lang>
		<log4j.version>1.2.16</log4j.version>
		<slf4j-api.version>1.6.1</slf4j-api.version>
		<slf4j-nop.version>1.6.4</slf4j-nop.version>
		<fileupload.version>1.3.1</fileupload.version>
		<junit.version>4.12</junit.version>
		<freemarker.version>2.3.16</freemarker.version>
		<jackson.version>2.9.6</jackson.version>
		<opencsv.version>3.3</opencsv.version>
		<jstl.version>1.2</jstl.version>
		<servlet-api.version>8.0.35</servlet-api.version>
		<jsp-api.version>8.0.35</jsp-api.version>
		<net.sf.json-lib.version>2.4</net.sf.json-lib.version>
		<fastjson.version>1.2.12</fastjson.version>


		<!-- plugins version -->
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>

		<!-- 将jar 发布到github上。 此处配置的名称要和maven配置文件对应的serverId一致 -->
		<github.global.server>github</github.global.server>
		<jedis.version>3.0.0</jedis.version>
	</properties>

	<dependencies>
		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- orm 整合第三方orm实现 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring 表达式语言 -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-expression</artifactId> 
			<version>${spring.version}</version> </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring end -->
		<!-- hibernate相关 start -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>${poi.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>ooxml-schemas</artifactId>
			<version>1.1</version>
		</dependency>


		<!-- json -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>${net.sf.json-lib.version}</version>
			<classifier>jdk15</classifier>
		</dependency>
		<!-- json end -->


		<!-- mysql -->
		<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
			<version>${mysql-connector.version}</version> </dependency> -->

		<!-- ojdbc7 -->
		<!-- <dependency> <groupId>cn.easyproject</groupId> <artifactId>ojdbc7</artifactId> 
			<version>${ojdbc7.version}</version> </dependency> -->
		<!-- mysql end -->

		
		<!-- 阿里巴巴的数据库连接池 -->
		<!-- <dependency> <groupId>com.alibaba</groupId> <artifactId>druid</artifactId> 
			<version>${druid.version}</version> </dependency> aop <dependency> <groupId>aopalliance</groupId> 
			<artifactId>aopalliance</artifactId> <version>${aopalliance.version}</version> 
			</dependency> -->

		<!-- aop end -->

		<!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
		<!-- <dependency> <groupId>org.freemarker</groupId> <artifactId>freemarker</artifactId> 
			<version>${freemarker.version}</version> </dependency> -->

		<!-- log -->
		<!-- <dependency> <groupId>log4j</groupId> <artifactId>log4j</artifactId> 
			<version>${log4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId> 
			<artifactId>slf4j-api</artifactId> <version>${slf4j-api.version}</version> 
			</dependency> <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-nop</artifactId> 
			<version>${slf4j-nop.version}</version> </dependency> -->
		<!-- log end -->

		<!-- opencsv -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		<!--文件上传 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${fileupload.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang}</version>
		</dependency>


		<!-- junit单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- servlet-api 8.5.32 -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>


	</dependencies>

	
	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>

				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>

			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven部署的插件,部署本地. 使用mvn clean deploy命令部署 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<!-- 配置本地打包后的本地仓库存储地址，后续上传jar包会从此仓库中去取 -->
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/maven-repository</altDeploymentRepository>
				</configuration>
			</plugin>
			
			<!-- 部署到远端github仓库的插件: -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for
						${project.artifactId}-${project.version}</message>
					<noJekyll>true</noJekyll>
					<!-- 指定从哪里去取打好的包，并上传至github -->
					<outputDirectory>${project.build.directory}/maven-repository</outputDirectory>
					<!-- 指定要上传的分支, refs/heads 这个不变，后面的分支名可选，可以采取一个jar包使用一个分支的策略。 若多个jar包同时发布在同一个分支的话，会覆盖。。。。 -->
					<branch>refs/heads/develop</branch>
					<!--  -->
				<!-- 	<merge>true</merge> -->
					<dryRun>true</dryRun>
					<!-- 包含outputDirectory标签内填的文件夹中的所有内容 -->
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github远程存储outputDirectory标签内填的文件夹中的内容 -->
					<repositoryName>maven-repository</repositoryName>
					<!-- github的用户名，注意不是登录的用户名，此项需要登录后，进入https://github.com/settings/profile页面配置Name属性， 
						否则会报 [ERROR] Failed to execute goal com.github.github:site-maven-plugin:0.12:site 
						(default) on project rfcore: Error creating commit: Invalid request. [ERROR] 
						For 'properties/name', nil is not a string. [ERROR] For 'properties/name', 
						nil is not a string. (422) [ERROR] -> [Help 1] 的错误 -->
					<repositoryOwner>rainyspring</repositoryOwner>
				</configuration>

				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>


		</plugins>

		<!-- 配置文件放行 ,打入jar包 -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<!-- 这里不放行，不要打入jar -->
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*</exclude>
					<!-- <exclude>**/*.properties</exclude> <exclude>**/*.xml</exclude> 
						<exclude>**/*.cer</exclude> -->
				</excludes>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>

	
</project>