<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	        http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 单独文件 -->
		<!-- <property name="location" value="/WEB-INF/config.properties" /> -->
		<!-- 多个文件 -->
		<property name="locations">
		 	<list>
                <!-- method1 标准配置 -->
                <value>classpath*:/config/config.properties</value>
                <!-- method2 -->
                <!-- <value>/WEB-INF/config.properties</value> -->
                <!--method3 服务器生产环境配置 -->
                <!-- <value>file:/var/myapp/application.server.properties</value> -->
            </list>
		</property>
	</bean>
	<!-- 连接mysql -->
	<bean id="defaultDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${main.driver}" />
		<property name="url" value="${main.url}" />
		<property name="username" value="${main.username}" />
		<property name="password" value="${main.password}" />
		<!--
		<property name="defaultAutoCommit" value="false"></property>
		-->
	</bean>

   
	<!-- 类型2：DB2、SQL Server、MySQL 等非 Oracle 的其它数据库，则只要简单配置一个 DefaultLobHandler -->
	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" 
		lazy-init="true" />

	<!--Hibernate4 sessionFactory -->
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="defaultDataSource" />
        <property name="packagesToScan">
            <list>
                <!-- 可以加多个包 -->
                <value>com.fulong.pipewelding.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto" >${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">true</prop>  
                <prop key="hibernate.use_sql_comments">true</prop>
                <!-- hibernate.jdbc.fetch_size 对mysql无效 -->
                
               <!--  <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                 -->
                <!-- 配置二级缓存 -->
			  <!--  <prop key="hibernate.cache.use_second_level_cache">true</prop>  
			    <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				 --> 
				<!-- 开启查询缓存 -->
				<!-- <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                 -->
            </props>
        </property>
    </bean>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
      
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   
   
   <!-- 配置事务异常封装 -->
   <bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!-- jdbc事务管理器 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource_mysql" />
		</property>
	</bean> -->

	<!-- 启用注解 -->
	<context:annotation-config />
	<!-- 注解事务驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>